extend type Mutation {
  registerUser(input: UserInput!): User!
  signIn(input: UserInput!): User!
  signOut: String!
  updateUser(_id: ID!, input: UserInput!): User
  deleteUser(_id: ID!): User
}

extend type Query {
  user(_id: ID!): User!
  users: [User!]!
  currentUser: User
}

enum Permission {
  ADMIN
  USER
}

type User {
  _id: ID!
  name: String!
  email: String!
  password: String
  permissions: [Permission]
  createdAt: String
  updatedAt: String
}
# resetToken: String
# resetTokenExpiry: String

input UserInput {
  name: String
  email: String
  password: String
  # other things
}
